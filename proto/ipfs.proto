syntax = "proto3";
package ipfs;

option go_package = "github.com/RTradeLtd/sdk/go/temporal/ipfs";
option java_package = "cloud.temporal.ipfs";

import "google/api/annotations.proto";

// TemporalIPFS implements Temporal's IPFS services
service TemporalIPFS {

  // Keys returns the IPFS keys associated with an authenticated request.
  rpc Keys(Empty) returns (KeysResp) {
    option (google.api.http) = { get: "/v3/ipfs/keys" };
  };

  // NewKey generates a new IPFS key associated with an authenticated request.
  rpc NewKey(Key) returns (Empty) {
    option (google.api.http) = { post: "/v3/ipfs/keys/new" };
  };
}

message Empty { }

message KeysResp { 
  repeated Key keys = 1;
}

/* MODELS */

message Key {
  message RSA {
    enum Size {
      S_2048 = 0;
      S_3072 = 1;
      S_4096 = 2;
    }
    Size size = 1;
  }
  message ED25519 {
    enum Size {
      S_256 = 0;
    }
    Size size = 1;
  }

  oneof type {
    RSA rsa         = 1;
    ED25519 ed25519 = 2;
  }
  string name = 3;
  string id   = 4;
}
